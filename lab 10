postgres=# \dt
              List of relations
 Schema |   Name   | Type  |      Owner       
--------+----------+-------+------------------
 public | students | table | almazbekrysbekov
(1 row)

postgres=# DROP TABLE students;
DROP TABLE
postgres=# \dt
Did not find any relations.
postgres=# SELECT * FROM employees;
ERROR:  relation "employees" does not exist
LINE 1: SELECT * FROM employees;
                      ^
postgres=# SELECT * FROM employees;
ERROR:  relation "employees" does not exist
LINE 1: SELECT * FROM employees;
                      ^
postgres=# CREATE TABLE employees (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    department VARCHAR(50),
    salary NUMERIC(10,2)
);
CREATE TABLE
postgres=# INSERT INTO employees (name, department, salary) VALUES
('Alice', 'Engineering', 90000),
('Bob', 'Sales', 75000),
('Charlie', 'Engineering', 120000),
('David', 'Marketing', 60000),
('Eve', 'Sales', 80000);
INSERT 0 5
postgres=# SELECT * FROM employees;
 id |  name   | department  |  salary   
----+---------+-------------+-----------
  1 | Alice   | Engineering |  90000.00
  2 | Bob     | Sales       |  75000.00
  3 | Charlie | Engineering | 120000.00
  4 | David   | Marketing   |  60000.00
  5 | Eve     | Sales       |  80000.00
(5 rows)

postgres=# SELECT name, department FROM employees;
  name   | department  
---------+-------------
 Alice   | Engineering
 Bob     | Sales
 Charlie | Engineering
 David   | Marketing
 Eve     | Sales
(5 rows)

postgres=# SELECT name, salary, salary * 0.10 AS potential_bonus FROM employees; 
  name   |  salary   | potential_bonus 
---------+-----------+-----------------
 Alice   |  90000.00 |       9000.0000
 Bob     |  75000.00 |       7500.0000
 Charlie | 120000.00 |      12000.0000
 David   |  60000.00 |       6000.0000
 Eve     |  80000.00 |       8000.0000
(5 rows)

postgres=# SELECT name, salary FROM employees WHERE department = 'Sales';
 name |  salary  
------+----------
 Bob  | 75000.00
 Eve  | 80000.00
(2 rows)

postgres=# SELECT name FROM employees WHERE salary > 75000 AND department = 'Engineering';
  name   
---------
 Alice
 Charlie
(2 rows)

postgres=# SELECT name, salary,
  CASE
    WHEN salary > 100000 THEN 'Senior'
    WHEN salary BETWEEN 60000 AND 100000 THEN 'Mid-Level'
    ELSE 'Junior'
  END AS employee_level
FROM employees;
  name   |  salary   | employee_level 
---------+-----------+----------------
 Alice   |  90000.00 | Mid-Level
 Bob     |  75000.00 | Mid-Level
 Charlie | 120000.00 | Senior
 David   |  60000.00 | Mid-Level
 Eve     |  80000.00 | Mid-Level
(5 rows)

postgres=# WITH department_averages AS (
  SELECT department, AVG(salary) AS avg_salary
  FROM employees
  GROUP BY department
)
SELECT e.name, e.salary, e.department, da.avg_salary
FROM employees e
JOIN department_averages da ON e.department = da.department
WHERE e.salary > da.avg_salary;
  name   |  salary   | department  |     avg_salary      
---------+-----------+-------------+---------------------
 Charlie | 120000.00 | Engineering | 105000.000000000000
 Eve     |  80000.00 | Sales       |  77500.000000000000
(2 rows)

postgres=# \dt
               List of relations
 Schema |   Name    | Type  |      Owner       
--------+-----------+-------+------------------
 public | employees | table | almazbekrysbekov
(1 row)

postgres=# 
